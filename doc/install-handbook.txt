### by duanjigang @2013-11-24 00:04 

lsmd 这套工具集分为以下几个程序：

multipkg: 用来制作软件包(rpm包)，也能直接发布软件包 (通过调用命令 multipkg-release 来实现)。

pkg-release: 发布软件包的工具，协助 multipkg 来制作多平台软件包并且发布。

pkgaudit: 软件包 (rpm 包)审计工具，实现仓库，包名和文件名冲突检测功能。

repobuilder: 索引更新程序，更新软件包(rpm，后续会支持其他格式软件包)的索引。

repouitls:  yum 配置初始化工具，初始化主机上的yum(或者apt等工具)的配置文件和插件等。

yumcache: 如果要搭建缓存节点，需要安装yumcache来提供cache服务。

yumclone：如果要搭建镜像站点，需要安装yumclone来提供镜像服务。

要搭建一个基本的软件管理平台，其中的：multipkg, pkg-release,pkgaudit,repobuilder和repoutils是必不可少的。

本文主要介绍服务搭建端的功能和部署方法，repoutils 留待后面文章介绍。



(1): 软件包发布流程说明

  lsmd 中软件包(以rpm为例)的发布流程如下：

  multipkg 软件包的 multipkg-release 命令在执行时（发布软件包），调用pkg-release 软件包的pkg-release 命令，把

软件的源码同步到打包服务器上去，然后打包服务器上的打包程序分别制作对应平台的软件包(5u或者6u的的noarch和x86_64平台的包) ；

多平台软件包制作好以后，会被发布到yum的根服务器上，然后根服务器上的pkgaudit 程序在对这些rpm进行完仓库，包名和文件名等冲突检测后，

移除非法的包，把合法的包发布到yum仓库中，然后通知repobuilder程序更新软件包的索引；repobuilder程序在收到索引更新通知或者

更新周期到来时，更新对应目录下软件包的索引。

这样，软件包的发布生效过程就完成了(删除过程后续补充)。

(2): 程序和角色节点对应关系。

本文不提及yumcache节点和yum mirror节点。只介绍最基本的包管理平台。

角色(机器)节点分为以下几个：

1 发布服务器 ：安装multipkg程序

2 打包服务器 ：安装 multipkg程序和 pkg-release 程序

3 yum根节点： 安装pkgaudit 程序和 repobuilder 程序

4 镜像节点： 安装 yumclone 程序

5 cache节点： 安装yumcache程序

6 安装客户端： 安装repoutils程序

本文不涉及4,5,6这三个角色。

(3): 使用举例

按照自顶向下的顺序介绍。

1) lsmd工具集下载与生成

首先是 yum 根节点上的multipkg 程序，这个程序基于雅虎的 multipkg 程序修改而来，雅虎的multipkg地址为：

https://github.com/ytoolshed/multipkg

按照上面地址的方法安装好雅虎的multipkg后 (如果安装过程有问题，可以向作者或者我求助)，通过 git clone lsmd的代码:

git clone git@github.com:duanjigang1983/lsmd.git

然后，使用雅虎的multipkg编译lsmd/multipkg生成新版本的multipkg的rpm包，升级安装，覆盖掉老的multipkg,这时，您就进入

lsmd的世界了。接着，你可以通过multipkg来生成

pkgaudit  pkg-release   repobuilder  repoutils  yumcache  yumclone

这些程序的rpm安装包了，当然也包括multipkg本身的rpm包。

2) 软件发布节点

对于一个软件管理平台，一般会有一个或者多个发布节点（触发发布动作的根节点），通过这些发布节点，源代码被编译生成为rpm包，并且上传

到yum服务器，规范检查，然后更新索引，最终，客户端就能够安装这些新发布的软件包了。

multipkg 这个程序需要被安装在每个发布节点上，对于multipkg而言，其本身即是一个单机rpm制作工具，比如，你通过如下命令就能生成一个

适合本机安装的rpm包：

cd pkg-release/

multipkg .

输出的rpm如下：


pkgrelease-1.1.0-1.noarch.rpm

或者，直接运行命令：

multipkg  /tmp/lsmd/pkg-release
也能得到如下rpm输出

pkgrelease-1.1.0-1.noarch.rpm

这个功能是非常便利的，方便我们在开发测试阶段生成rpm包并且验证其安装过程和功能。

另外，multipkg在lsmd中被增加了一个命令，叫：multipkg-release，这个命令在被调用时，会检查配置的打包服务器列表，

依次把源代码拷贝到打包服务器上，然后调用打包服务器的pkgrelease 命令，制作rpm并且发布到yum的根服务器。

该程序有一个配置文件需要修改：/etc/buildserver.conf，内容如下： 
server=server1,server2,server3

这里的每一个server就是一个打包机器，比如server1可以为5u系统，server2为6u的系统。比如，我配置的内容为：

server=192.168.1.96,192.168.1.59

其中96为6u系统，59为5u系统。

在把代码复制到打包服务期时，发布服务器是通过rsync来传输文件的，使用的是root账号，因此，发布服务器要能够自动登录打包服务器，所以，

需要在59和96分别添加发布服务器的ssh key,保证从发布服务器上能够自动ssh登录59和96机器，关于登录的账号类型，在后期，我们不会再使用

root账号，而将其切换成lsmd的普通账号，目前暂定用root账户。

当发布服务器上修改了 buildserver.conf，并且打包服务器允许其root自动ssh登录后，我们来看打包服务器。

3）打包服务器

打包服务器上安装了 multipkg 程序和 pkgrelease 程序，关于前者的打包功能不再赘述。

看下pkgrelease 的成分：

rpm -ql pkgrelease
输出如下：

/bin/pkgrelease
/etc/pkgrelease.conf

pkgrelease 命令用来调用multipkg制作本地rpm,并且上传rpm到yum根服务器。

pkgrelease.conf内容如下：

uploaddir=/home/jigang.djg/yum/upload
yumserver=192.168.1.95

配置了yum根节点的地址和rpm上传目录。

当pkgrelease被调用时，它就会根据rpm的信息（平台和OS版本）构造一个上传路径，然后把生成的rpm上传到配置文件中指定

服务器的对应目录下。这样，打包服务器的工作就完成了。

同样，打包服务器把rpm发布到yum的根节点，也是通过ssh通道来实现的，因此，需要在yum的根节点上配置每个发布服务器对其能够自动ssh登录。

3）yum根节点（索引节点）

yum的根节点也是软件管理平台中最重要的节点。其负责软件包审计和索引更新功能，安装pkgaudit和repobuilder两个程序。

当pkgrelease制作好rpm并且发布到yum根节点上后，pkgaudit会检查上传目录下的所有rpm文件，检查其是否和现有仓库中的rpm包存在

仓库，包名和文件冲突关系，如果有出现，就删除上传的这个包，宣告发布失败，如果通过检查，就把这个包移动到线上目录，并且通知索引更新

程序repobuilder更新索引，repobuidler程序在收到消息后，或者更新周期到来时，更新线上目录下的所有索引，它采用多线程更新机制，更新速度比较快。

下面来看下这两个程序的配置文件：

pkgaudit: /etc/pkgaudit.conf 内容如下：

[main]
dbname=lsmd.db
tablename=lsmd_rpm
storedir=/usr/local/pkgaudit/data
upload=/home/jigang.djg/yum/upload
online=/home/jigang.djg/yum/online

pkgaudit保留了一个包信息数据文件，你可以通过修改dbname来对其进行重命令。storedir是这个数据文件的存储位置。

upload就是pkgrelease上传的目录，online是线上包仓库的目录路径。比如，我测试用的yum根节点的上传和线上目录如下：

/home/jigang.djg/yum/
/home/jigang.djg/yum/upload
/home/jigang.djg/yum/upload/develop
/home/jigang.djg/yum/upload/develop/6
/home/jigang.djg/yum/upload/develop/6/x86_64
/home/jigang.djg/yum/upload/develop/6/noarch
/home/jigang.djg/yum/upload/develop/5
/home/jigang.djg/yum/upload/develop/5/x86_64
/home/jigang.djg/yum/upload/develop/5/noarch
/home/jigang.djg/yum/upload/extras
/home/jigang.djg/yum/upload/extras/6
/home/jigang.djg/yum/upload/extras/6/x86_64
/home/jigang.djg/yum/upload/extras/6/noarch
/home/jigang.djg/yum/upload/extras/5
/home/jigang.djg/yum/upload/extras/5/x86_64
/home/jigang.djg/yum/upload/extras/5/noarch
/home/jigang.djg/yum/online
/home/jigang.djg/yum/online/develop
/home/jigang.djg/yum/online/develop/6
/home/jigang.djg/yum/online/develop/6/x86_64
/home/jigang.djg/yum/online/develop/6/noarch
/home/jigang.djg/yum/online/develop/5
/home/jigang.djg/yum/online/develop/5/x86_64
/home/jigang.djg/yum/online/develop/5/noarch
/home/jigang.djg/yum/online/extras
/home/jigang.djg/yum/online/extras/6
/home/jigang.djg/yum/online/extras/6/noarch
/home/jigang.djg/yum/online/extras/5
/home/jigang.djg/yum/online/extras/5/noarch

其中仓库为extras和develop,支持的OS为6u和5u,包平台种类为noarch和x86_64.

每个包通过审核后，会从upload的目录中转移到online的对应目录中，创建索引，以供安装升级。

接着看repobuilder的配置：/etc/repo.conf,正如书中（《linux软件管理平台设计与实现》）对repobuilder的配置的描述一样，这个

文件中配置了所有需要更新的仓库路径和更新时间间隔，开关等信息，如下：

[general]

interval=36
thread_num=30
signalfile=update.txt

[repo]
path=/home/jigang.djg/yum/online/extras/5/x86_64
on=1
interval = 1800

[repo]
path=/home/jigang.djg/yum/online/extras/5/noarch
on=1
interval=1200

[repo]
path=/home/jigang.djg/yum/online/extras/6/x86_64
on=1
interval = 1800

[repo]
path=/home/jigang.djg/yum/online/extras/6/noarch
on=1
interval=1200

[repo]
path=/home/jigang.djg/yum/online/develop/5/x86_64
on=1
interval = 1800

[repo]
path=/home/jigang.djg/yum/online/develop/5/noarch
on=1
interval=1200

[repo]
path=/home/jigang.djg/yum/online/develop/6/x86_64
on=1
interval = 1800

[repo]
path=/home/jigang.djg/yum/online/develop/6/noarch
on=1
interval=1200

general 的 interval字段是默认的更新周期，如果某个 [repo]未配置interval，则使用这个时间间隔。

thread_num是并发更新索引的线程数，signalfile是pkgaudit通知repobuilder更新索引的信号文件，

如果某个[repo]的path变量对应的目录中出现了signalfile这个文件，repobuilder的线程就会立刻更新这个path

对应目录下rpm文件的索引。这样通知和固定周期结合的方式，提高了索引更新效率。

4）实际例子。

在yum根服务器上，上传目录和在线包目录为空，如下输出：

tree /home/jigang.djg/yum/

输出如下：

/home/jigang.djg/yum/
├── online
└── upload

192.168.1.96 为发布机器，192.168.1.96 和 192.168.1.59 为打包机器，192.168.1.95 为 yum 服务器

在 96 上用 lsmd 的代码做发布测试，如下：

multipkg-release /tmp/lsmd/multipkg/ extras

multipkg-release /tmp/lsmd/pkg-release develop

然后查看95上的上传目录和在线包目录，执行如下命令

find /home/jigang.djg/yum/online | grep rpm

输出如下：
/home/jigang.djg/yum/online/develop/6/noarch/pkgrelease-1.1.0-1.noarch.rpm
/home/jigang.djg/yum/online/develop/5/noarch/pkgrelease-1.1.0-1.noarch.rpm
/home/jigang.djg/yum/online/extras/6/noarch/multipkg-1.2-1.noarch.rpm
/home/jigang.djg/yum/online/extras/5/noarch/multipkg-1.2-1.noarch.rpm

同样，也能查看到索引目录和索引文件的更新。

tail -f /usr/local/pkgaudit/log/pkgaudit.log

能查看到日志：

2013-11-23 23:43:36  INFO - Creating signal file for dir [/home/jigang.djg/yum/online/extras/6/noarch]
2013-11-23 23:43:41  INFO - File [/home/jigang.djg/yum/upload/extras/5/noarch/multipkg-1.2-1.noarch.rpm] last modify [1385221408]-[1385221421]
2013-11-23 23:43:41  INFO - Insert new record for package [multipkg-1.2-1]
2013-11-23 23:43:41  INFO - Creating signal file for dir [/home/jigang.djg/yum/online/extras/5/noarch]
2013-11-23 23:44:26  INFO - File [/home/jigang.djg/yum/upload/develop/6/noarch/pkgrelease-1.1.0-1.noarch.rpm] last modify [1385221448]-[1385221466]
2013-11-23 23:44:26  INFO - Insert new record for package [pkgrelease-1.1.0-1]
2013-11-23 23:44:26  INFO - File [/home/jigang.djg/yum/upload/develop/5/noarch/pkgrelease-1.1.0-1.noarch.rpm] last modify [1385221450]-[1385221466]
2013-11-23 23:44:26  INFO - Insert new record for package [pkgrelease-1.1.0-1]
2013-11-23 23:44:26  INFO - Creating signal file for dir [/home/jigang.djg/yum/online/develop/6/noarch]
2013-11-23 23:44:26  INFO - Creating signal file for dir [/home/jigang.djg/yum/online/develop/5/noarch]

如果再次尝试把pkgrelease 发布到 extras 仓库，会看到提示信息，执行如下命令：

multipkg-release /tmp/lsmd/pkg-release extras

查看日志/usr/local/pkgaudit/log/pkgaudit.log输出如下：

2013-11-23 23:52:02  INFO - File [/home/jigang.djg/yum/upload/extras/6/noarch/pkgrelease-1.1.0-1.noarch.rpm] last modify [1385221903]-[1385221922]
2013-11-23 23:52:02  INFO - Package [pkgrelease-1.1.0-1] ought to be released to repo 'develop' but not 'extras',just ignore this one
2013-11-23 23:52:02  INFO - File [/home/jigang.djg/yum/upload/extras/5/noarch/pkgrelease-1.1.0-1.noarch.rpm] last modify [1385221905]-[1385221922]
2013-11-23 23:52:02  INFO - Package [pkgrelease-1.1.0-1] ought to be released to repo 'develop' but not 'extras',just ignore this one

提示这个包已经发布到develop仓库了，不能再发布到extras仓库。






































